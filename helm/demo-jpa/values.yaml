# Default values for demo-jpa.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: demo-jpa
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8080
  nodePort: 30088

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: demo-jpa.local.minikube
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
resources:
  requests:
    cpu: "500m"
    memory: "500Mb"
  limits:
    cpu: "1"
    memory: "1Gi"

djConfig:
  application.yaml: |
    spring:
      r2dbc:
        url: r2dbc:postgresql://localhost:5432/example_db
        username: example_user
        password: 1234
        pool:
          enabled: true
          max-size: 10
          max-idle-time: 10m
          initial-size: 1
      webflux:
        problemdetails:
          enabled: true
    springdoc:
      show-actuator: true
      swagger-ui:
        enabled: true
    management:
      endpoints:
        web:
          exposure:
            include: health,prometheus,openapi,swagger-ui,live,liveness,readiness
      endpoint:
        prometheus:
          enabled: true
        health:
          probes:
            enabled: true
        metrics:
          enabled: true
      prometheus:
        metrics:
          export:
            enabled: true
    debug: true


envFrom:
  - configMapRef:
      name: config-map

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
